---
- name: "Drain node {{ ansible_hostname|lower }} , even if there are pods not managed by a ReplicationController, Job, or DaemonSet on it."
  become_user: rick  
  connection: local
  vars:
    ansible_python_interpreter: /usr/bin/python3
  kubernetes.core.k8s_drain:
    state: drain
    name: "{{ ansible_hostname|lower }}"  
    kubeconfig: ~/.kube/{{ kubeconfig_name }}
    delete_options:
      ignore_daemonsets: yes
      delete_emptydir_data: yes
      force: yes
      terminate_grace_period: 10
      wait_sleep: 90
  delegate_to: localhost

- name: Update the repository cache Ubuntu 
  ansible.builtin.apt:
    update_cache: yes
  when: 
    ansible_facts['distribution'] == "Ubuntu"

- name: Upgrade all the packages 
  ansible.builtin.apt:
    upgrade: full 
  when: 
    ansible_facts['distribution'] == "Ubuntu"

- name: Remove OpenSUSE Cloud-init repository
  community.general.zypper_repository:
    name: "Cloud:Tools (15.3)"
    state: absent
  when:
    - ansible_os_family == 'Suse'

- name: Update all packages Suse 
  community.general.zypper:
    name: '*'
    state: latest
    update_cache: true
  when:
    - ansible_os_family == 'Suse'

- name: Reboot {{ ansible_hostname|lower }}
  ansible.builtin.reboot:
    reboot_timeout: 180

- name: Add new repos Suse 
  shell: zypper -n --releasever={{ opensuse_version }} lr -u
  when:
    - ansible_os_family == 'Suse'

- name: Refresh repos Suse
  shell: zypper -n --releasever={{ opensuse_version }} ref
  when:
    - ansible_os_family == 'Suse'

- name: Perform upgrade of Suse {{ ansible_hostname|lower }} 
  shell: zypper -n --releasever={{ opensuse_version }} dup --download-in-advance
  when:
    - ansible_os_family == 'Suse'

- name: Reboot {{ ansible_hostname|lower }}
  ansible.builtin.reboot:
    reboot_timeout: 180
  when: 
    - ansible_os_family == 'Suse' 

- name: "Uncordon node {{ ansible_hostname|lower }}."
  become_user: rick 
  connection: local
  vars:
    ansible_python_interpreter: /usr/bin/python3
  kubernetes.core.k8s_drain:
    state: uncordon
    name: "{{ ansible_hostname|lower }}"
    kubeconfig: ~/.kube/{{ kubeconfig_name }}
  delegate_to: localhost

- name: 120 seconds pause
  become_user: rick 
  connection: local
  pause:
    seconds: 120
  delegate_to: localhost